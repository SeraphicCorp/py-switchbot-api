---
name: Checking

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DEFAULT_PYTHON: "3.11"

jobs:
  mypy:
    name: mypy
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.2.2
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install dependencies
        run: poetry install --no-interaction
      - name: 🚀 Run mypy
        run: poetry run mypy switchbot_api
  linting:
    name: linting
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.2.2
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install Python dependencies
        run: poetry install --no-interaction
      - name: 🚀 Run ruff linter
        run: poetry run ruff check --output-format=github .
      - name: 🚀 Run ruff formatter
        run: poetry run ruff format --check .
  pytest:
    name: Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.11", "3.12", "3.13"]
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.2.2
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ matrix.python }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install dependencies
        run: poetry install --no-interaction
      - name: 🚀 Run pytest
        run: poetry run pytest --cov vehicle tests
      - name: ⬆️ Upload coverage artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          include-hidden-files: true
          name: coverage-${{ matrix.python }}
          path: .coverage
